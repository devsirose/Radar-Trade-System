spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
  security:
    oauth2:
#      client:
#        registration:
#          keycloak:
#            client-id: rts-call-center-ac
#            client-secret: tjkVejU6tAm3vZDJYDBABjvPEwZH0nxs
#        provider:
#          keycloak:
#            issuer-uri: http://localhost:7080/realms/master
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:7080/realms/master/protocol/openid-connect/certs

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true

eureka:
  instance:
    prefer-ip-address: true
  # standalone mode
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka/
info:
  app:
    name: api-gateway
    description: rts-api-gateway
    version: 1.0.0

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
token:
  exchange:
    provider:
      keycloak:
        endpoint: http://localhost:7080/realms/master/protocol/openid-connect/token
        client-id: rts-call-center-ac
        client-secret: tjkVejU6tAm3vZDJYDBABjvPEwZH0nxs
        redirect-uri: http://localhost:8080/callback
        login-url: http://localhost:7080/realms/master/protocol/openid-connect/auth
        logout-url: http://localhost:7080/realms/master/protocol/openid-connect/logout
---
spring:
  config:
    activate:
      on-profile: docker
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://auth-server:7080/realms/master/protocol/openid-connect/certs
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/

