<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.radartrade</groupId>
	<artifactId>radar-trade-system</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>
	<name>radar-trade-system</name>
	<description>An AI-powered trading platform for real-time price analysis, sentiment detection, and strategy backtesting.</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<modules>
		<module>rts-common</module>
		<module>rts-payment-service</module>
<!--		<module>rts-api-gateway</module>-->
		<module>rts-discovery-server</module>
		<module>rts-price-service</module>
		<module>rts-backtest-service</module>
<!--		<module>rts-order-service</module>-->
<!--		<module>rts-order-book-service</module>-->
		<module>rts-exchange-gateway-processor</module>
	</modules>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<properties>
		<java.version>21</java.version>
		<lombok-version>1.18.36</lombok-version>
		<jackson-binding.version>2.18.3</jackson-binding.version>
		<spring-boot.version>3.4.7</spring-boot.version>
		<spring-cloud.version>2024.0.1</spring-cloud.version>
		<maven-compile-plugin.version>3.14.0</maven-compile-plugin.version>
		<postgresql.version>42.7.3</postgresql.version>
		<r2dbc.version>1.0.7.RELEASE</r2dbc.version>
		<prometheus.version>1.14.8</prometheus.version>
		<okhttp.version>5.1.0</okhttp.version>
		<redisson.version>3.47.0</redisson.version>
		<reactor-test.version>3.4.7</reactor-test.version>

		<!--Deployment Environment-->
		<docker.image.prefix>devops22clc</docker.image.prefix>
		<docker.image.exposed.port>9090</docker.image.exposed.port>
		<docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
		<!-- podman is also supported -->
		<container.executable>docker</container.executable>
		<!-- By default, the OCI image is build for the linux/amd64 platform -->
		<!-- For Apple Silicon M2 Chip you have to change it to the linux/arm64 -->
		<container.platform>linux/amd64</container.platform>
		<!-- The -load option is a shortcut for or -output=type=docker -->
		<!-- Could be changed by the -push option !-->
		<container.build.extraarg>--load</container.build.extraarg>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compile-plugin.version}</version>
				<configuration>
					<release>21</release>
				</configuration>
			</plugin>
		</plugins>
	</build>

<profiles>
	<profile>
		<id>buildDocker</id>
		<build>
			<pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.1.1</version>
						<executions>
							<execution>
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${container.executable}</executable>
									<workingDirectory>${docker.image.dockerfile.dir}</workingDirectory>
									<arguments>
										<argument>build</argument>
										<argument>-f</argument>
										<argument>Dockerfile</argument>
										<argument>--build-arg</argument>
										<argument>ARTIFACT_NAME=${project.build.finalName}</argument>
										<argument>--build-arg</argument>
										<argument>EXPOSED_PORT=${docker.image.exposed.port}</argument>
										<argument>--platform</argument>
										<argument>${container.platform}</argument>
										<argument>${container.build.extraarg}</argument>
										<argument>-t</argument>
										<argument>${docker.image.prefix}/${project.artifactId}</argument>
										<argument>${project.build.directory}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</pluginManagement>
		</build>
	</profile>
</profiles>

</project>
